/*! 2015-04-28 */

!function(m){"use strict";function $load(languageToLoad){m.request({method:"GET",url:$infix()+languageToLoad+$suffix()}).then(function(translations){currentLanguage=languageToLoad||currentLanguage,storage.set(translations)})}function $infix(){return configuration.infix}function $suffix(){return configuration.suffix||""}window.mx=window.mx||{};var configuration,currentLanguage,Storage=function(){var store={},variableRegex=/\{\{(.*?)\}\}/g;return{set:function(item){store[currentLanguage]=item},get:function(name,values){var translations=store[currentLanguage],result=translations;if(name.split(".").forEach(function(property){result=result[property]}),values){var variables=result.match(variableRegex);for(var key in values)variables.forEach(function(variable){-1!==variable.indexOf(key)&&(result=result.replace(variable,values[key]))})}return result}}},validators={string:function(string){if("string"!=typeof string)throw new TypeError("a string is expected, but "+string+" ["+typeof string+"] given");return string},plainObject:function(object){if("object"!=typeof object)throw new TypeError("an object is expected, but "+object+"  ["+typeof object+"] given");return object}},storage=new Storage;mx.translate=function(item,values){return validators.string(item),storage.get(item,values)},mx.translate.configure=function(options){validators.plainObject(options),configuration=options},mx.translate.use=function(languageToUse){return languageToUse&&currentLanguage!==languageToUse?(validators.string(languageToUse),void $load(languageToUse)):currentLanguage}}(m);
//# sourceMappingURL=dist/mithril-translate.js.map